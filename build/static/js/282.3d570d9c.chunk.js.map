{"version":3,"file":"static/js/282.3d570d9c.chunk.js","mappings":"gNAkBA,MA6FA,GAAeA,EAAAA,EAAAA,IAAf,EA7FqBC,IASK,IATJ,KACpBC,EAAI,MACJC,EAAK,QACLC,EAAO,QACPC,EAAO,OACPC,EAAM,EACNC,EAAC,GACDC,EAAE,UACFC,GACkBR,EAQlB,OACES,EAAAA,EAAAA,KAACC,EAAAA,GAAc,CAAAC,UACbF,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACJ,UAAWA,EAAWK,aAAW,EAAAF,UACrCG,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CACRC,QAAQ,gBACRC,MAAM,SACNV,GAAIA,EACJC,UAAWA,EAAUG,SAAA,EAErBF,EAAAA,EAAAA,KAACS,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAGX,UAClCF,EAAAA,EAAAA,KAACc,EAAAA,EAAO,CAACC,IAAKvB,EAAMwB,MAAM,OAAOC,OAAO,YAE1CjB,EAAAA,EAAAA,KAACS,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAGX,UAClCG,EAAAA,EAAAA,MAACa,EAAAA,GAAc,CAAAhB,SAAA,EACbF,EAAAA,EAAAA,KAAA,MAAAE,SAAKL,EAAEJ,MACPO,EAAAA,EAAAA,KAACmB,EAAAA,GAAO,CAACC,MAAO,CAAEC,WAAY,YAAanB,SAAEL,EAAEH,KAChC,UAAdK,GACCC,EAAAA,EAAAA,KAACsB,EAAAA,GAAa,CAAApB,SACO,kBAAXN,GACNA,EAAO2B,KACL,CACEC,EAIA1B,KAGEE,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,CAELC,MAAOF,EAAKE,MACZC,QAASA,IAtCjB7B,KACA8B,SAASC,eAAe/B,GAChCgC,eAAe,CACrBC,SAAU,UACV,EAkCqCC,CAAS,WAAW9B,SAElCL,EAAE2B,EAAK/B,QAJHK,QAWjBE,EAAAA,EAAAA,KAACiC,EAAAA,GAAc,CAAA/B,UACbF,EAAAA,EAAAA,KAACkC,EAAAA,EAAG,CAAC3B,QAAQ,gBAAeL,SACN,kBAAZP,GACNA,EAAQ4B,KACN,CACEC,EAKA1B,KAGEO,EAAAA,EAAAA,MAACI,EAAAA,EAAG,CAAU0B,KAAM,GAAGjC,SAAA,EACrBF,EAAAA,EAAAA,KAACc,EAAAA,EAAO,CACNC,IAAKS,EAAKhC,KACVwB,MAAM,OACNC,OAAO,UAETjB,EAAAA,EAAAA,KAACoC,EAAAA,GAAQ,CAAAlC,SAAEL,EAAE2B,EAAK/B,UAClBO,EAAAA,EAAAA,KAACqC,EAAAA,GAAO,CAAAnC,SAAEL,EAAE2B,EAAK9B,aAPTI,oBAmBjB,G","sources":["components/ContentBlock/index.tsx"],"sourcesContent":["import { Row, Col } from \"antd\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nimport { ContentBlockProps } from \"./types\";\r\nimport { Button } from \"../../common/Button\";\r\nimport { SvgIcon } from \"../../common/SvgIcon\";\r\nimport {\r\n  ContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n  StyledRow,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\n\r\nconst ContentBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  section,\r\n  button,\r\n  t,\r\n  id,\r\n  direction,\r\n}: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ContentSection>\r\n      <Fade direction={direction} triggerOnce>\r\n        <StyledRow\r\n          justify=\"space-between\"\r\n          align=\"middle\"\r\n          id={id}\r\n          direction={direction}\r\n        >\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n          </Col>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content style={{ whiteSpace: 'pre-line' }}>{t(content)}</Content>\r\n              {direction === \"right\" ? (\r\n                <ButtonWrapper>\r\n                  {typeof button === \"object\" &&\r\n                    button.map(\r\n                      (\r\n                        item: {\r\n                          color?: string;\r\n                          title: string;\r\n                        },\r\n                        id: number\r\n                      ) => {\r\n                        return (\r\n                          <Button\r\n                            key={id}\r\n                            color={item.color}\r\n                            onClick={() => scrollTo(\"contact\")}\r\n                          >\r\n                            {t(item.title)}\r\n                          </Button>\r\n                        );\r\n                      }\r\n                    )}\r\n                </ButtonWrapper>\r\n              ) : (\r\n                <ServiceWrapper>\r\n                  <Row justify=\"space-between\">\r\n                    {typeof section === \"object\" &&\r\n                      section.map(\r\n                        (\r\n                          item: {\r\n                            title: string;\r\n                            content: string;\r\n                            icon: string;\r\n                          },\r\n                          id: number\r\n                        ) => {\r\n                          return (\r\n                            <Col key={id} span={11}>\r\n                              <SvgIcon\r\n                                src={item.icon}\r\n                                width=\"60px\"\r\n                                height=\"60px\"\r\n                              />\r\n                              <MinTitle>{t(item.title)}</MinTitle>\r\n                              <MinPara>{t(item.content)}</MinPara>\r\n                            </Col>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </Row>\r\n                </ServiceWrapper>\r\n              )}\r\n            </ContentWrapper>\r\n          </Col>\r\n        </StyledRow>\r\n      </Fade>\r\n    </ContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(ContentBlock);\r\n"],"names":["withTranslation","_ref","icon","title","content","section","button","t","id","direction","_jsx","ContentSection","children","Fade","triggerOnce","_jsxs","StyledRow","justify","align","Col","lg","md","sm","xs","SvgIcon","src","width","height","ContentWrapper","Content","style","whiteSpace","ButtonWrapper","map","item","Button","color","onClick","document","getElementById","scrollIntoView","behavior","scrollTo","ServiceWrapper","Row","span","MinTitle","MinPara"],"sourceRoot":""}